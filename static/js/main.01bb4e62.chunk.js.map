{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","redux/reducers/postReducer.js","components/Pagination/Pagination.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/AboutMePage/AboutMePage.js","pages/NewPostPage/NewPostPage.js","pages/RegisterPage/RegisterPage.js","pages/EditPage/EditPage.js","components/Header/Header.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getLimitPost","page","limit","fetch","then","res","json","userReducer","createSlice","name","initialState","user","isLoadingUser","errorMessage","reducers","setUser","state","action","payload","setIsLoadingUser","setErrorMessage","actions","userLogin","username","password","dispatch","method","headers","body","JSON","stringify","login","data","ok","message","userRegister","nickname","register","getUser","authorization","getMe","response","toString","catch","err","ErrorMessage","styled","div","LoginPage","useState","setUsername","setPassword","history","useHistory","location","useLocation","useDispatch","isLoading","useSelector","store","users","useEffect","pathname","console","log","onSubmit","e","preventDefault","push","value","onChange","target","type","postReducer","isLoadingPost","post","newPostResponse","homePagePosts","pageNumberCount","setIsLoadingPost","setPost","setNewPostResponse","setHomePagePosts","setPageNumberCount","getPost","id","getPostAPI","newPost","title","postArticle","editPost","editArticle","getAllPosts","posts","allPages","Math","ceil","length","Array","from","_","i","deletePost","deleteArticle","PaginationContainer","PageButton","button","props","color","Pagination","currentPage","setCurrentPage","map","onClick","handleClickPage","Root","PostContainer","PostTitle","Link","PostDate","Post","to","Date","createdAt","toLocaleString","HomePage","getHomePagePosts","PostBody","ButtonWrapper","DeleteButton","EditButton","EditLink","handleDelete","PostPage","useParams","AboutMe","AboutMePage","NewPostContainer","NewPostForm","form","NewPostHeader","NewPostTitle","NewPostTitleInput","input","NewPostBody","NewPostBodyTextarea","textarea","NewPostButtonWrapper","NewPostButton","NewPostPage","setTitle","setBody","placeholder","rows","RegisterPage","setNickname","HeaderContainer","Brand","NavbarList","Nav","$active","LeftContainer","Header","App","basename","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01bb4e62.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  return localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}?_expand=user`).then((res) =>\n    res.json()\n  );\n};\n\nexport const getLimitPost = (page, limit) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=${limit}&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const postArticle = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deleteArticle = (id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const editArticle = (id, title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { login, register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\n\nexport const userReducer = createSlice({\n  name: \"users\",\n  initialState: {\n    user: null,\n    isLoadingUser: false,\n    errorMessage: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n\n    setIsLoadingUser: (state, action) => {\n      state.isLoadingUser = action.payload;\n    },\n\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const {\n  setUser,\n  setIsLoadingUser,\n  setErrorMessage,\n} = userReducer.actions;\n\nexport const userLogin = (username, password) => (dispatch) => {\n  return login(username, password).then((data) => {\n    dispatch(setIsLoadingUser(false));\n    if (data.ok === 0) {\n      return dispatch(setErrorMessage(data.message));\n    }\n    setAuthToken(data.token);\n    return data;\n  });\n};\n\nexport const userRegister = (nickname, username, password) => (dispatch) => {\n  return register(nickname, username, password).then((data) => {\n    dispatch(setIsLoadingUser(false));\n    if (data.ok === 0) {\n      return dispatch(setErrorMessage(data.message));\n    }\n    setAuthToken(data.token);\n    return data;\n  });\n};\n\nexport const getUser = () => (dispatch) => {\n  return getMe()\n    .then((response) => {\n      if (response.ok !== 1) {\n        setAuthToken(\"\");\n        return dispatch(setErrorMessage(response.toString()));\n      }\n      dispatch(setUser(response.data));\n      return response;\n    })\n    .catch((err) => {\n      return dispatch(setErrorMessage(err));\n    });\n};\n\nexport default userReducer.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setIsLoadingUser,\n  setErrorMessage,\n  userLogin,\n  getUser,\n} from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.users.isLoadingUser);\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setErrorMessage(null));\n    if (isLoading) return;\n    dispatch(setIsLoadingUser(true));\n\n    dispatch(userLogin(username, password)).then(() => {\n      if (!localStorage.token) return;\n\n      dispatch(getUser()).then((response) => {\n        if (response.ok === 1) {\n          history.push(\"/\");\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    // 每次換頁的時候把 errorMessage 清掉\n    if (location.pathname) {\n      dispatch(setErrorMessage(null));\n    }\n    console.log(location);\n  }, [dispatch, location]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  postArticle,\n  editArticle,\n  getPosts,\n  getLimitPost,\n  deleteArticle,\n} from \"../../WebAPI\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    post: null,\n    newPostResponse: null,\n    homePagePosts: [],\n    pageNumberCount: [],\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n\n    setHomePagePosts: (state, action) => {\n      state.homePagePosts = action.payload;\n    },\n\n    setPageNumberCount: (state, action) => {\n      state.pageNumberCount = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setPost,\n  setNewPostResponse,\n  setHomePagePosts,\n  setPageNumberCount,\n} = postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id)\n    .then((res) => {\n      dispatch(setPost(res));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const newPost = (title, body) => (dispatch) => {\n  // 可以變成 promise 傳遞\n  return postArticle(title, body).then((res) => {\n    dispatch(setNewPostResponse(res));\n    return res;\n  });\n};\n\nexport const editPost = (id, title, body) => (dispatch) => {\n  return editArticle(id, title, body).then((res) => {\n    dispatch(setNewPostResponse(res));\n    return res;\n  });\n};\n\nexport const getAllPosts = (limit) => (dispatch) => {\n  getPosts().then((posts) => {\n    const allPages = Math.ceil(posts.length / limit);\n    dispatch(\n      setPageNumberCount(Array.from({ length: allPages }, (_, i) => i + 1))\n    );\n  });\n};\n\nexport const getHomePagePosts = (limit) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n\n  getLimitPost(1, limit).then((posts) => {\n    dispatch(setHomePagePosts(posts));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const deletePost = (id) => (dispatch) => {\n  return deleteArticle(id).then((res) => {\n    return res;\n  });\n};\n\nexport default postReducer.reducer;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { getLimitPost } from \"../../WebAPI\";\nimport { setHomePagePosts } from \"../../redux/reducers/postReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst PaginationContainer = styled.div`\n  margin: 20px auto;\n  text-align: center;\n`;\nconst PageButton = styled.button`\n  border: 0.5px solid #ddd;\n  font-size: 16px;\n  padding: 5px 10px;\n  margin: 0 10px;\n  cursor: pointer;\n  border-radius: 8px;\n  background: ${(props) => props.color};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport default function Pagination({ pageNumberCount, limit }) {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClickPage = (page) => {\n    getLimitPost(page, limit).then((posts) =>\n      dispatch(setHomePagePosts(posts))\n    );\n    setCurrentPage(page);\n  };\n\n  return (\n    <PaginationContainer>\n      {pageNumberCount.map((page) => (\n        <PageButton\n          color={\n            currentPage === page ? \"rgba(0, 0, 0, 0.4)\" : \"rgba(0, 0, 0, 0.1)\"\n          }\n          onClick={() => handleClickPage(page)}\n        >\n          {page}\n        </PageButton>\n      ))}\n    </PaginationContainer>\n  );\n}\n\nPagination.propTypes = {\n  setPosts: PropTypes.func,\n  pageNumberCount: PropTypes.array,\n  limit: PropTypes.number,\n};\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../../components/Pagination/\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllPosts,\n  getHomePagePosts,\n} from \"../../redux/reducers/postReducer\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const posts = useSelector((store) => store.posts.homePagePosts);\n  const pageNumberCount = useSelector((store) => store.posts.pageNumberCount);\n  const limit = 5;\n\n  useEffect(() => {\n    dispatch(getAllPosts(limit));\n    dispatch(getHomePagePosts(limit));\n  }, [dispatch]);\n\n  return (\n    <Root>\n      {!isLoading && (\n        <>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n          <Pagination pageNumberCount={pageNumberCount} limit={limit} />\n        </>\n      )}\n    </Root>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { getPost, deletePost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 60%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border: 1px solid #333;\n  padding: 10px 15px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 26px;\n`;\n\nconst PostDate = styled.div`\n  border-bottom: 1px solid #333;\n  margin: 10px 0px;\n  font-size: 14px;\n`;\n\nconst PostBody = styled.div`\n  word-break: break-word;\n  font-size: 18px;\n  margin-top: 15px;\n`;\n\nconst ButtonWrapper = styled.div`\n  text-align: right;\n  margin-top: 20px;\n`;\n\nconst DeleteButton = styled.button`\n  cursor: pointer;\n`;\n\nconst EditButton = styled.button`\n  cursor: pointer;\n  margin-right: 5px;\n  padding: 1px;\n`;\n\nconst EditLink = styled(Link)`\n  box-sizing: border-box;\n  text-decoration: none;\n  color: black;\n  padding: 4px 5px;\n`;\n\nfunction Post({ post, handleDelete, user }) {\n  return (\n    <PostContainer>\n      <PostTitle>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      <PostBody>{post.body}</PostBody>\n      {user ? (\n        <ButtonWrapper>\n          <EditButton>\n            <EditLink to={`/edit/${post.id}`}>編輯</EditLink>\n          </EditButton>\n          <DeleteButton onClick={handleDelete}>刪除</DeleteButton>\n        </ButtonWrapper>\n      ) : (\n        \"\"\n      )}\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function PostPage() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n\n    dispatch(deletePost(id)).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  return (\n    <Root>\n      {!isLoading && post ? (\n        <Post post={post} handleDelete={handleDelete} user={user} />\n      ) : (\n        \"\"\n      )}\n    </Root>\n  );\n}\n","import styled from \"styled-components\";\n\nconst AboutMe = styled.div`\n  font-size: 32px;\n  margin: 20px auto;\n  text-align: center;\n`;\n\nexport default function AboutMePage() {\n  return (\n    <AboutMe>這是程式導師計畫第四期的 React 部落格作業 by ericcch24</AboutMe>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { newPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst NewPostContainer = styled.div`\n  margin: 10px auto;\n  width: 900px;\n  padding: 30px;\n  border: 1px solid black;\n  box-sizing: border-box;\n`;\n\nconst NewPostForm = styled.form``;\n\nconst NewPostHeader = styled.div`\n  font-size: 20px;\n`;\n\nconst NewPostTitle = styled.div`\n  margin-top: 20px;\n`;\n\nconst NewPostTitleInput = styled.input`\n  width: 98%;\n  padding: 6px;\n  font-size: 100%;\n  font-family: inherit;\n`;\n\nconst NewPostBody = styled.div`\n  margin-top: 30px;\n`;\n\nconst NewPostBodyTextarea = styled.textarea`\n  width: 98%;\n  padding: 6px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst NewPostButtonWrapper = styled.div`\n  text-align: right;\n  margin-top: 20px;\n`;\n\nconst NewPostButton = styled.button`\n  display: inline-block;\n  cursor: pointer;\n  padding: 10px 30px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 10px;\n  color: red;\n`;\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n  const user = useSelector((store) => store.users.user);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage(\"請輸入文章標題與內容\");\n    }\n    if (!user) {\n      return setErrorMessage(\"請登入後繼續\");\n    }\n\n    dispatch(newPost(title, body)).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/post/${newPostResponse.id}`);\n      }\n    });\n  };\n\n  return (\n    <NewPostContainer>\n      {user ? (\n        <NewPostForm onSubmit={handleSubmit}>\n          <NewPostHeader>發布文章：</NewPostHeader>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          <NewPostTitle>\n            <NewPostTitleInput\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n              placeholder=\"輸入文章標題\"\n            />\n          </NewPostTitle>\n          <NewPostBody>\n            <NewPostBodyTextarea\n              value={body}\n              onChange={(e) => {\n                setBody(e.target.value);\n              }}\n              placeholder=\"輸入文章內容\"\n              rows={20}\n            />\n          </NewPostBody>\n          <NewPostButtonWrapper>\n            <NewPostButton>送出</NewPostButton>\n          </NewPostButtonWrapper>\n        </NewPostForm>\n      ) : (\n        <ErrorMessage>\"請登入後繼續\"</ErrorMessage>\n      )}\n    </NewPostContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setIsLoadingUser,\n  setErrorMessage,\n  userRegister,\n  getUser,\n} from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const isLoading = useSelector((store) => store.users.isLoadingUser);\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setErrorMessage(null));\n    if (isLoading) return;\n    dispatch(setIsLoadingUser(true));\n\n    dispatch(userRegister(nickname, username, password)).then(() => {\n      if (!localStorage.token) return;\n\n      dispatch(getUser()).then((response) => {\n        if (response.ok === 1) {\n          history.push(\"/\");\n        }\n      });\n    });\n  };\n\n  useEffect(() => {\n    // 每次換頁的時候把 errorMessage 清掉\n    if (location.pathname) {\n      dispatch(setErrorMessage(null));\n    }\n  }, [dispatch, location]);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        nickname:{\" \"}\n        <input\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        username:{\" \"}\n        <input\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <button>註冊</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getPost, editPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst NewPostContainer = styled.div`\n  margin: 10px auto;\n  width: 900px;\n  padding: 30px;\n  border: 1px solid black;\n  box-sizing: border-box;\n`;\n\nconst NewPostForm = styled.form``;\n\nconst NewPostHeader = styled.div`\n  font-size: 20px;\n`;\n\nconst NewPostTitle = styled.div`\n  margin-top: 20px;\n`;\n\nconst NewPostTitleInput = styled.input`\n  width: 98%;\n  padding: 6px;\n  font-size: 100%;\n  font-family: inherit;\n`;\n\nconst NewPostBody = styled.div`\n  margin-top: 30px;\n`;\n\nconst NewPostBodyTextarea = styled.textarea`\n  width: 98%;\n  padding: 6px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst NewPostButtonWrapper = styled.div`\n  text-align: right;\n  margin-top: 20px;\n`;\n\nconst NewPostButton = styled.button`\n  display: inline-block;\n  cursor: pointer;\n  padding: 10px 30px;\n  font-family: inherit;\n  font-size: 100%;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 10px;\n  color: red;\n`;\n\nexport default function NewPostPage() {\n  const { id } = useParams();\n  const history = useHistory();\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n  const [title, setTitle] = useState(post.title);\n  const [body, setBody] = useState(post.body);\n  const [errorMessage, setErrorMessage] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id, dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage(\"請輸入文章標題與內容\");\n    }\n    if (!user) {\n      return setErrorMessage(\"請登入後繼續\");\n    }\n\n    dispatch(editPost(id, title, body)).then((newPostResponse) => {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/post/${newPostResponse.id}`);\n      }\n    });\n  };\n\n  return (\n    <NewPostContainer>\n      {user ? (\n        <NewPostForm onSubmit={handleSubmit}>\n          <NewPostHeader>發布文章：</NewPostHeader>\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n          <NewPostTitle>\n            <NewPostTitleInput\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n              placeholder=\"輸入文章標題\"\n            />\n          </NewPostTitle>\n          <NewPostBody>\n            <NewPostBodyTextarea\n              value={body}\n              onChange={(e) => {\n                setBody(e.target.value);\n              }}\n              placeholder=\"輸入文章內容\"\n              rows={20}\n            />\n          </NewPostBody>\n          <NewPostButtonWrapper>\n            <NewPostButton>送出</NewPostButton>\n          </NewPostButtonWrapper>\n        </NewPostForm>\n      ) : (\n        <ErrorMessage>\"請登入後繼續\"</ErrorMessage>\n      )}\n    </NewPostContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { setAuthToken } from \"../../utils\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n  background: white;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  ${(props) =>\n    props.$active &&\n    `\n  background: rgba(0,0,0,0.1)\n  `};\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(setUser(null));\n\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  // loading 空白\n  // user 發表 , !loading\n  // !user 註冊, !loading\n\n  // useEffect(() => {\n  //   setIsLoadingHeader(true);\n  //   if (user) {\n  //     setIsLoadingHeader(false);\n  //   }\n  // }, [user]);\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about-me\" $active={location.pathname === \"/about-me\"}>\n            關於我\n          </Nav>\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {user ? (\n          <>\n            <Nav to=\"/newpost\" $active={location.pathname === \"/newpost\"}>\n              發布文章\n            </Nav>\n            <Nav onClick={handleLogout}>登出</Nav>\n          </>\n        ) : (\n          <>\n            <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n              註冊\n            </Nav>\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n          </>\n        )}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  LoginPage,\n  HomePage,\n  PostPage,\n  AboutMePage,\n  NewPostPage,\n  RegisterPage,\n  EditPage,\n} from \"../../pages/\";\nimport Header from \"../Header/\";\nimport { getUser } from \"../../redux/reducers/userReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUser());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      <Router basename=\"/w24-react-redux-blog\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/post/:id\">\n            <PostPage />\n          </Route>\n          <Route path=\"/newpost\">\n            <NewPostPage />\n          </Route>\n          <Route path=\"/about-me\">\n            <AboutMePage />\n          </Route>\n          <Route path=\"/edit/:id\">\n            <EditPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport postReducer from \"./reducers/postReducer\";\r\nimport userReducer from \"./reducers/userReducer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    users: userReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}